#include <stdio.h>
#include <string.h>
#include <math.h>
#include "Vad.h"

float CVAD :: hamwindow[L_WINDOW] = {
0.08000000f, 0.08005703f, 0.08022812f, 0.08051321f, 0.08091225f,
0.08142514f, 0.08205172f, 0.08279188f, 0.08364540f, 0.08461212f,
0.08569173f, 0.08688401f, 0.08818865f, 0.08960532f, 0.09113365f,
0.09277334f, 0.09452391f, 0.09638494f, 0.09835598f, 0.10043652f,
0.10262608f, 0.10492408f, 0.10732999f, 0.10984316f, 0.11246302f,
0.11518890f, 0.11802010f, 0.12095598f, 0.12399574f, 0.12713866f,
0.13038395f, 0.13373083f, 0.13717847f, 0.14072597f, 0.14437246f,
0.14811710f, 0.15195890f, 0.15589692f, 0.15993017f, 0.16405767f,
0.16827843f, 0.17259133f, 0.17699537f, 0.18148938f, 0.18607232f,
0.19074300f, 0.19550033f, 0.20034306f, 0.20527001f, 0.21027996f,
0.21537170f, 0.22054392f, 0.22579536f, 0.23112471f, 0.23653066f,
0.24201185f, 0.24756692f, 0.25319457f, 0.25889328f, 0.26466170f,
0.27049842f, 0.27640197f, 0.28237087f, 0.28840363f, 0.29449883f,
0.30065489f, 0.30687031f, 0.31314352f, 0.31947297f, 0.32585713f,
0.33229437f, 0.33878314f, 0.34532180f, 0.35190874f, 0.35854232f,
0.36522087f, 0.37194279f, 0.37870640f, 0.38550997f, 0.39235184f,
0.39923036f, 0.40614375f, 0.41309035f, 0.42006844f, 0.42707625f,
0.43411207f, 0.44117412f, 0.44826069f, 0.45537004f, 0.46250033f,
0.46964988f, 0.47681686f, 0.48399949f, 0.49119604f, 0.49840465f,
0.50562358f, 0.51285106f, 0.52008528f, 0.52732444f, 0.53456670f,
0.54181033f, 0.54905349f, 0.55629444f, 0.56353134f, 0.57076240f,
0.57798582f, 0.58519983f, 0.59240264f, 0.59959245f, 0.60676748f,
0.61392599f, 0.62106609f, 0.62818617f, 0.63528436f, 0.64235890f,
0.64940804f, 0.65643007f, 0.66342324f, 0.67038584f, 0.67731601f,
0.68421221f, 0.69107264f, 0.69789559f, 0.70467937f, 0.71142232f,
0.71812278f, 0.72477907f, 0.73138952f, 0.73795253f, 0.74446648f,
0.75092971f, 0.75734061f, 0.76369762f, 0.76999915f, 0.77624369f,
0.78242958f, 0.78855544f, 0.79461962f, 0.80062068f, 0.80655706f,
0.81242740f, 0.81823015f, 0.82396388f, 0.82962728f, 0.83521879f,
0.84073710f, 0.84618086f, 0.85154873f, 0.85683930f, 0.86205131f,
0.86718345f, 0.87223446f, 0.87720311f, 0.88208807f, 0.88688827f,
0.89160240f, 0.89622939f, 0.90076804f, 0.90521723f, 0.90957582f,
0.91384280f, 0.91801709f, 0.92209762f, 0.92608339f, 0.92997342f,
0.93376678f, 0.93746245f, 0.94105959f, 0.94455731f, 0.94795465f,
0.95125085f, 0.95444512f, 0.95753652f, 0.96052444f, 0.96340811f,
0.96618676f, 0.96885973f, 0.97142631f, 0.97388595f, 0.97623801f,
0.97848189f, 0.98061699f, 0.98264289f, 0.98455900f, 0.98636484f,
0.98806006f, 0.98964417f, 0.99111670f, 0.99247742f, 0.99372596f,
0.99486196f, 0.99588519f, 0.99679530f, 0.99759221f, 0.99827564f,
0.99884540f, 0.99930143f, 0.99964350f, 0.99987161f, 0.99998569f,
1.00000000f, 0.99921930f, 0.99687845f, 0.99298108f, 0.98753333f,
0.98054361f, 0.97202289f, 0.96198452f, 0.95044410f, 0.93741965f,
0.92293155f, 0.90700239f, 0.88965708f, 0.87092263f, 0.85082841f,
0.82940567f, 0.80668795f, 0.78271067f, 0.75751126f, 0.73112911f,
0.70360541f, 0.67498308f, 0.64530689f, 0.61462307f, 0.58297962f,
0.55042595f, 0.51701277f, 0.48279238f, 0.44781810f, 0.41214463f,
0.37582767f, 0.33892387f, 0.30149087f, 0.26358715f, 0.22527184f,
0.18660481f, 0.14764643f, 0.10845750f, 0.06909923f, 0.02963307f
};

float CVAD :: grid[GRID_POINTS+1] = {
 0.9997559f,  0.9986295f,  0.9945219f,  0.9876884f,  0.9781476f,
 0.9659258f,  0.9510565f,  0.9335804f,  0.9135454f,  0.8910065f,
 0.8660254f,  0.8386706f,  0.8090170f,  0.7771460f,  0.7431448f,
 0.7071068f,  0.6691306f,  0.6293204f,  0.5877852f,  0.5446391f,
 0.5000000f,  0.4539905f,  0.4067366f,  0.3583679f,  0.3090170f,
 0.2588190f,  0.2079117f,  0.1564345f,  0.1045285f,  0.0523360f,
 0.0000000f, -0.0523360f, -0.1045285f, -0.1564345f, -0.2079117f,
-0.2588190f, -0.3090170f, -0.3583679f, -0.4067366f, -0.4539905f,
-0.5000000f, -0.5446391f, -0.5877852f, -0.6293204f, -0.6691306f,
-0.7071068f, -0.7431448f, -0.7771460f, -0.8090170f, -0.8386706f,
-0.8660254f, -0.8910065f, -0.9135454f, -0.9335804f, -0.9510565f,
-0.9659258f, -0.9781476f, -0.9876884f, -0.9945219f, -0.9986295f,
-0.9997559f
};

// filter coefficients (fc = 140 Hz)
float CVAD :: b140[3] = { 0.92727435f, -1.8544941f,  0.92727435f};
float CVAD :: a140[3] = { 1.00000000f,  1.9059465f, -0.91140240f};

float CVAD :: lbf_corr[NP+1]={
    0.24017939691329f,  0.21398822343783f,  0.14767692339633f,
    0.07018811903116f,  0.00980856433051f, -0.02015934721195f,
   -0.02388269958005f, -0.01480076155002f, -0.00503292155509f,
    0.00012141366508f,  0.00119354245231f,  0.00065908718613f,
    0.00015015782285f
};


float CVAD :: lwindow[M+2] = {
0.99879038f, 0.99546894f, 0.98995779f, 0.98229335f, 0.97252620f,
0.96072035f, 0.94695264f, 0.93131180f, 0.91389754f, 0.89481964f,
0.87419660f, 0.85215437f
};

void CVAD :: init_pre_process(void)
{
  x0 = x1 = 0.0;
  y2 = y1 = 0.0;
}

void CVAD :: pre_process(float signal[], int lg)
{
  int i;
  float x2;
  float y0;
        
  for(i=0; i<lg; i++)
    {
      x2 = x1;
      x1 = x0;
      x0 = signal[i];
      y0 = y1*a140[1] + y2*a140[2] + x0*b140[0] + x1*b140[1] + x2*b140[2];
      signal[i] = y0;
      y2 = y1;
      y1 = y0;
    }
}
